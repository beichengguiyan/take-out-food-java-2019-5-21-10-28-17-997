import java.util.List;

import com.sun.xml.internal.bind.v2.runtime.Name;

/**
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
	private ItemRepository itemRepository;
	private SalesPromotionRepository salesPromotionRepository;

	public App(ItemRepository itemRepository, SalesPromotionRepository salesPromotionRepository) {
		this.itemRepository = itemRepository;
		this.salesPromotionRepository = salesPromotionRepository;
	}

	public String bestCharge(List<String> inputs) {
		// TODO: write code here
		int flag = 0;
		StringBuffer result = new StringBuffer();
		double originalPrice = 0; // 原价
		/*优惠2省的钱*/
		double savelMoney = 0;  
		String[] id = new String[inputs.size()];
		String[] name = new String[inputs.size()];
		int[] number = new int[inputs.size()];
		double[] price = new double[inputs.size()];
		double[] totalPrice = new double[inputs.size()]; // 单个菜品总价
		double[] discount = new double[inputs.size()]; // 菜品折扣
		double[] salesPromotionPrice = new double[salesPromotionRepository.findAll().size()];

		// 记录菜品id，名称，单价，数量
		for (int i = 0; i < inputs.size(); i++) {
			id[i] = inputs.get(i).substring(0, 8);
			number[i] = Integer.parseInt(inputs.get(i).substring(11));
			for (Item item : itemRepository.findAll()) {
				if (id[i].equals(item.getId())) {
					name[i] = item.getName();
					price[i] = item.getPrice();
				}
			}

		}

		// 求总价
		for (int i = 0; i < id.length; i++) {
			totalPrice[i] = price[i] * number[i];
			originalPrice = originalPrice + totalPrice[i];
		}

		// 求优惠价
		for (int i = 0; i < salesPromotionRepository.findAll().size(); i++) {
			// 优惠1：满30-6
			if (salesPromotionRepository.findAll().get(i).getType().equals("BUY_30_SAVE_6_YUAN")) {
				if (originalPrice >= 30) {
					salesPromotionPrice[i] = originalPrice - 6;
				} else {
					salesPromotionPrice[i] = originalPrice;
				}
			}
			// 优惠2：菜品半价
			if (salesPromotionRepository.findAll().get(i).getType().equals("50%_DISCOUNT_ON_SPECIFIED_ITEMS")) {
				// 记录每个菜品折扣
				for (int j = 0; j < id.length; j++) {
					discount[j] = 1;// 折扣置1
					for (int k = 0; k < salesPromotionRepository.findAll().get(i).getRelatedItems().size(); k++) {
						if (id[j].equals(salesPromotionRepository.findAll().get(i).getRelatedItems().get(k))) {
							discount[j] = 0.5;
						}
					}
					// 计算折扣价
					salesPromotionPrice[i] = salesPromotionPrice[i] + price[j] * number[j] * discount[j];
				}
			}
		}

		// 打印账单
		// 原价
		if (originalPrice == salesPromotionPrice[0] && originalPrice == salesPromotionPrice[1]) {
			result.append("============= 订餐明细 =============\n");
			for (int i = 0; i < id.length; i++) {
				result.append(name[i] + " x " + number[i] + " = " + (int)totalPrice[i] + "元\n");
			}
			result.append("-----------------------------------\n");
			result.append("总计：" + (int)originalPrice + "元\n");
			result.append("===================================");
		}
		// 优惠1
		else if (salesPromotionPrice[0] <= salesPromotionPrice[1]) {
			result.append("============= 订餐明细 =============\n");
			for (int i = 0; i < id.length; i++) {
				result.append(name[i] + " x " + number[i] + " = " + (int)totalPrice[i] + "元\n");
			}
			result.append("-----------------------------------\n");
			result.append("使用优惠:\n");
			result.append("满30减6元，省6元\n");
			result.append("-----------------------------------\n");
			result.append("总计：" + (int)salesPromotionPrice[0] + "元\n");
			result.append("===================================");
		}
		// 优惠2
		else {
			result.append("============= 订餐明细 =============\n");
			for (int i = 0; i < id.length; i++) {
				result.append(name[i] + " x " + number[i] + " = " + (int)totalPrice[i] + "元\n");
			}
			result.append("-----------------------------------\n");
			result.append("使用优惠:\n");
			result.append("指定菜品半价(");
			for (int i = 0; i < id.length; i++) {
				if (discount[i] == 0.5) {
					flag++;
					if (flag == 1) {
						result.append(name[i]);
						savelMoney = savelMoney + price[i] / 2;
					} else {
						result.append("，");
						result.append(name[i]);
						savelMoney = savelMoney + price[i] / 2;
					}
				}
			}
			result.append(")，省" + (int)savelMoney + "元\n");
			result.append("-----------------------------------\n");
			result.append("总计：" + (int)salesPromotionPrice[1] + "元\n");
			result.append("===================================");
		}

		// 返回结果
		return result.toString();
	}
}
